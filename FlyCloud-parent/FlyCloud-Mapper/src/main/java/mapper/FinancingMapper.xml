<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.FinancingMapper">
  <resultMap id="BaseResultMap" type="pojo.Financing">
    <id column="financingId" jdbcType="INTEGER" property="financingid" />
    <result column="saleId" jdbcType="INTEGER" property="saleid" />
    <result column="repertoryId" jdbcType="INTEGER" property="repertoryid" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="financingMoney" jdbcType="DECIMAL" property="financingmoney" />
    <result column="financingType" jdbcType="DECIMAL" property="financingtype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    financingId, saleId, repertoryId, companyId, financingMoney, financingType
  </sql>
  <select id="selectByExample" parameterType="pojo.FinancingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from financing
    where financingId = #{financingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financing
    where financingId = #{financingid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.FinancingExample">
    delete from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Financing">
    insert into financing (financingId, saleId, repertoryId, 
      companyId, financingMoney, financingType
      )
    values (#{financingid,jdbcType=INTEGER}, #{saleid,jdbcType=INTEGER}, #{repertoryid,jdbcType=INTEGER}, 
      #{companyid,jdbcType=INTEGER}, #{financingmoney,jdbcType=DECIMAL}, #{financingtype,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.Financing">
    insert into financing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="financingid != null">
        financingId,
      </if>
      <if test="saleid != null">
        saleId,
      </if>
      <if test="repertoryid != null">
        repertoryId,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="financingmoney != null">
        financingMoney,
      </if>
      <if test="financingtype != null">
        financingType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="financingid != null">
        #{financingid,jdbcType=INTEGER},
      </if>
      <if test="saleid != null">
        #{saleid,jdbcType=INTEGER},
      </if>
      <if test="repertoryid != null">
        #{repertoryid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="financingmoney != null">
        #{financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="financingtype != null">
        #{financingtype,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.FinancingExample" resultType="java.lang.Integer">
    select count(*) from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update financing
    <set>
      <if test="record.financingid != null">
        financingId = #{record.financingid,jdbcType=INTEGER},
      </if>
      <if test="record.saleid != null">
        saleId = #{record.saleid,jdbcType=INTEGER},
      </if>
      <if test="record.repertoryid != null">
        repertoryId = #{record.repertoryid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.financingmoney != null">
        financingMoney = #{record.financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.financingtype != null">
        financingType = #{record.financingtype,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update financing
    set financingId = #{record.financingid,jdbcType=INTEGER},
      saleId = #{record.saleid,jdbcType=INTEGER},
      repertoryId = #{record.repertoryid,jdbcType=INTEGER},
      companyId = #{record.companyid,jdbcType=INTEGER},
      financingMoney = #{record.financingmoney,jdbcType=DECIMAL},
      financingType = #{record.financingtype,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Financing">
    update financing
    <set>
      <if test="saleid != null">
        saleId = #{saleid,jdbcType=INTEGER},
      </if>
      <if test="repertoryid != null">
        repertoryId = #{repertoryid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="financingmoney != null">
        financingMoney = #{financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="financingtype != null">
        financingType = #{financingtype,jdbcType=DECIMAL},
      </if>
    </set>
    where financingId = #{financingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Financing">
    update financing
    set saleId = #{saleid,jdbcType=INTEGER},
      repertoryId = #{repertoryid,jdbcType=INTEGER},
      companyId = #{companyid,jdbcType=INTEGER},
      financingMoney = #{financingmoney,jdbcType=DECIMAL},
      financingType = #{financingtype,jdbcType=DECIMAL}
    where financingId = #{financingid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="ssm.pojo.Financing">
    <id column="financingId" jdbcType="INTEGER" property="financingid" />
    <result column="saleId" jdbcType="INTEGER" property="saleid" />
    <result column="repertoryId" jdbcType="INTEGER" property="repertoryid" />
    <result column="financingMoney" jdbcType="DECIMAL" property="financingmoney" />
    <result column="financingType" jdbcType="DECIMAL" property="financingtype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    financingId, saleId, repertoryId, financingMoney, financingType
  </sql>
  <select id="selectByExample" parameterType="ssm.pojo.FinancingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from financing
    where financingId = #{financingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financing
    where financingId = #{financingid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ssm.pojo.FinancingExample">
    delete from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.pojo.Financing">
    insert into financing (financingId, saleId, repertoryId, 
      financingMoney, financingType)
    values (#{financingid,jdbcType=INTEGER}, #{saleid,jdbcType=INTEGER}, #{repertoryid,jdbcType=INTEGER}, 
      #{financingmoney,jdbcType=DECIMAL}, #{financingtype,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="ssm.pojo.Financing">
    insert into financing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="financingid != null">
        financingId,
      </if>
      <if test="saleid != null">
        saleId,
      </if>
      <if test="repertoryid != null">
        repertoryId,
      </if>
      <if test="financingmoney != null">
        financingMoney,
      </if>
      <if test="financingtype != null">
        financingType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="financingid != null">
        #{financingid,jdbcType=INTEGER},
      </if>
      <if test="saleid != null">
        #{saleid,jdbcType=INTEGER},
      </if>
      <if test="repertoryid != null">
        #{repertoryid,jdbcType=INTEGER},
      </if>
      <if test="financingmoney != null">
        #{financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="financingtype != null">
        #{financingtype,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.pojo.FinancingExample" resultType="java.lang.Integer">
    select count(*) from financing
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update financing
    <set>
      <if test="record.financingid != null">
        financingId = #{record.financingid,jdbcType=INTEGER},
      </if>
      <if test="record.saleid != null">
        saleId = #{record.saleid,jdbcType=INTEGER},
      </if>
      <if test="record.repertoryid != null">
        repertoryId = #{record.repertoryid,jdbcType=INTEGER},
      </if>
      <if test="record.financingmoney != null">
        financingMoney = #{record.financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.financingtype != null">
        financingType = #{record.financingtype,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update financing
    set financingId = #{record.financingid,jdbcType=INTEGER},
      saleId = #{record.saleid,jdbcType=INTEGER},
      repertoryId = #{record.repertoryid,jdbcType=INTEGER},
      financingMoney = #{record.financingmoney,jdbcType=DECIMAL},
      financingType = #{record.financingtype,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ssm.pojo.Financing">
    update financing
    <set>
      <if test="saleid != null">
        saleId = #{saleid,jdbcType=INTEGER},
      </if>
      <if test="repertoryid != null">
        repertoryId = #{repertoryid,jdbcType=INTEGER},
      </if>
      <if test="financingmoney != null">
        financingMoney = #{financingmoney,jdbcType=DECIMAL},
      </if>
      <if test="financingtype != null">
        financingType = #{financingtype,jdbcType=DECIMAL},
      </if>
    </set>
    where financingId = #{financingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ssm.pojo.Financing">
    update financing
    set saleId = #{saleid,jdbcType=INTEGER},
      repertoryId = #{repertoryid,jdbcType=INTEGER},
      financingMoney = #{financingmoney,jdbcType=DECIMAL},
      financingType = #{financingtype,jdbcType=DECIMAL}
    where financingId = #{financingid,jdbcType=INTEGER}
  </update>
</mapper>